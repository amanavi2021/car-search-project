{"version":3,"file":"static/js/814.d34ae8cf.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,EAAAA,GAAH,yR,UCKF,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QAK7BC,GADkBC,EAAAA,EAAAA,IAAYC,EAAAA,IACAC,KAAI,SAAAC,GAAM,OAAIA,EAAOC,EAAX,IAE9C,OACE,SAACT,EAAD,UACGG,EAAQI,KAAI,SAAAC,GAAM,OACjB,SAACE,EAAA,EAAD,CAEEF,OAAQA,EACRG,WAAYP,EAAYQ,SAASJ,EAAOC,KAFnCD,EAAOC,GAFG,KASxB,C,mRCvBYI,EAAYZ,EAAAA,EAAAA,IAAH,yHAQTa,EAAMb,EAAAA,EAAAA,OAAH,kkBAuBHc,EAAad,EAAAA,EAAAA,KAAH,qGAOVe,EAAcf,EAAAA,EAAAA,IAAH,yEAKXgB,EAAchB,EAAAA,EAAAA,MAAH,irBA8BXiB,EAAajB,EAAAA,EAAAA,IAAH,qEAKVkB,EAAYlB,EAAAA,EAAAA,MAAH,mHAOTmB,EAAkBnB,EAAAA,EAAAA,MAAH,kkBAqBXoB,EAAmBpB,EAAAA,EAAAA,MAAH,kjBCnGlB,SAASqB,IAKnB,IAHD,IAAMC,GAAWC,EAAAA,EAAAA,MAEbC,EAAS,GACHC,EAAI,GAAIA,GAAK,IAAKA,GAAG,GAC1BD,EAAOE,KAAKD,GAkBjB,OACI,SAACb,EAAD,WACI,UAACE,EAAD,CAAYa,SAhBC,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,SAElBC,EAAS,CACXC,KAAMJ,EAAOI,KAAKC,MAClBC,MAAON,EAAOM,MAAMD,MACpBE,YAAaP,EAAOO,YAAYF,MAChCG,UAAWR,EAAOQ,UAAUH,OAGhCb,GAASiB,EAAAA,EAAAA,IAAcN,GAC1B,EAIO,WACI,UAAClB,EAAD,YACA,SAACG,EAAD,CAAWsB,QAAQ,OAAnB,wBACA,SAACxB,EAAD,CAAayB,KAAK,YAAYjC,GAAG,QAAQkC,KAAK,OAAOC,aAAa,MAAMC,YAAY,oBACpF,qBAAUpC,GAAG,YAAb,SACKqC,EAAAA,KAAU,SAAAX,GAAI,OAAK,mBAChBC,MAAOD,IADsBY,EAAAA,EAAAA,MAAlB,UAMnB,UAAC/B,EAAD,YACA,SAACG,EAAD,CAAWsB,QAAQ,QAAnB,6BACA,SAACxB,EAAD,CAAayB,KAAK,aAAajC,GAAG,QAAQkC,KAAK,QAAQC,aAAa,MAAMC,YAAY,UACtF,qBAAUpC,GAAG,aAAb,SACKgB,EAAOlB,KAAI,SAAA8B,GAAK,OAAK,mBAClBD,MAAOC,IADwBU,EAAAA,EAAAA,MAAlB,UAQrB,UAAC/B,EAAD,YACI,SAACG,EAAD,CAAWsB,QAAQ,cAAnB,oCACJ,UAACvB,EAAD,YACA,SAACE,EAAD,CAAiB4B,KAAK,SAASvC,GAAG,cAAckC,KAAK,cAAcC,aAAa,MAAMC,YAAY,UAClG,SAACxB,EAAD,CAAkB2B,KAAK,SAASvC,GAAG,YAAYkC,KAAK,YAAYC,aAAa,MAAMC,YAAY,cAIhG,SAAC/B,EAAD,CAAKkC,KAAK,SAAV,wBAMd,CCtEM,IAAMnC,EAAYZ,EAAAA,EAAAA,IAAH,8FAOTa,EAAMb,EAAAA,EAAAA,OAAH,kiBCCD,SAASgD,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,GAFQhD,EAAAA,EAAAA,IAAYiD,EAAAA,KACEjD,EAAAA,EAAAA,IAAYkD,EAAAA,IAAwBC,OAG1DjC,GAAWC,EAAAA,EAAAA,OAEjBiC,EAAAA,EAAAA,YAAU,WACNlC,GAASmC,EAAAA,EAAAA,KACZ,GAAE,IAEH,IAKMC,GAAiBtD,EAAAA,EAAAA,IAAYkD,EAAAA,IAE7BK,GAAavD,EAAAA,EAAAA,IAAYwD,EAAAA,IACzBC,GAAUzD,EAAAA,EAAAA,IAAY0D,EAAAA,IACtBC,EAA8B,KAAjBF,EAAQ3B,MAAiC,KAAlB2B,EAAQzB,OAAwC,KAAxByB,EAAQxB,aAA4C,KAAtBwB,EAAQvB,UAGvG0B,QAAQC,IAAI,aAAcF,GAC3B,IAAIG,EAAkB,GAClBH,IACAG,EAAkBP,EAAWQ,QAAO,SAAA5D,GACpC,IAAM6B,EAAQgC,OAAO7D,EAAO8D,YAAYC,QAAQ,IAAK,KAGrD,OACKT,EAAQ3B,OAAS3B,EAAO2B,MAAyB,KAAjB2B,EAAQ3B,QAEvCE,GAASyB,EAAQzB,OAA2B,KAAlByB,EAAQzB,SAC9ByB,EAAQxB,aAAe9B,EAAOgE,SAAmC,KAAxBV,EAAQxB,eAClD9B,EAAOgE,SAAWV,EAAQvB,WAAqC,KAAxBuB,EAAQxB,YAE3D,IAEA2B,QAAQC,IAAI,iBAAkBC,IAI/B,IAAMM,EAAgBN,EAAgBX,OAASW,EAAkBR,EAGjE,OACI,UAAC,EAAD,YACI,SAACrC,EAAD,KACA,SAACpB,EAAD,CAAaC,QAASsE,IACrBpB,GAAgBc,EAAgBX,QAAU,SAAC,EAAD,CAAKR,KAAK,SAAS0B,QAvClD,WAChBtB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,IACZ5B,GAASoD,EAAAA,EAAAA,GAAiB,CAACxB,KAAAA,IAC9B,EAoCkD,wBAG1C,mBAIZ,C","sources":["components/AdvertsList/AdvertList.styled.jsx","components/AdvertsList/AdvertsList.jsx","components/AdvertsSearch/AdvertsSearch.styled.jsx","components/AdvertsSearch/AdvertsSearch.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    display: grid;\n    grid-template-columns: none;\n    grid-template-columns: repeat(auto-fill, minmax(280px,1fr));\n    grid-row-gap: 50px;\n    margin-top: 0;\n    margin-bottom: 50px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 0;\n`;","import { useSelector } from 'react-redux';\n// import { selectorAdverts, selectorCurrentAdverts } from 'redux/adverts/selectors';\nimport { selectorFavoriteAdverts } from 'redux/adverts/selectors';\n\nimport AdvertListItem from 'components/AdvertListItem';\nimport { List } from './AdvertList.styled';\n\nexport default function AdvertsList({adverts}) {\n\n  // const adverts = useSelector(selectorCurrentAdverts);\n\n  const favoriteAdverts = useSelector(selectorFavoriteAdverts);\n  const favoritesId = favoriteAdverts.map(advert => advert.id);\n  \n  return (\n    <List>\n      {adverts.map(advert => (\n        <AdvertListItem\n          key={advert.id}\n          advert={advert}\n          isFavorite={favoritesId.includes(advert.id)}\n        />\n      ))}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    margin-left: auto;\n    margin-right:auto;\n    margin-bottom: 50px;\n    margin-top: 20px;\n`;\n\n\nexport const Btn = styled.button`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 12px 50px;\n    font-family: 'Manrope', sans-serif;\n    font-size: 14;\n    font-weight:600;\n    color: var(--white-color);\n    line-height: calc(20/14);\n    border-radius: 12px;\n    height: 48px;\n    width: 136px;\n    border: none;\n    background-color: var(--blue-color);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover, :focus {\n        background-color:  var(--dark-blue-color);\n    }\n\n`;\nexport const SearchForm = styled.form`\n    display: flex;\n    gap: 18px;\n    align-items:end;\n    width: 859px;\n`;\n\nexport const FormElement = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const FilterInput = styled.input`\n    box-sizing: border-box;\n    height: 48px;\n    padding: 14px 18px;\n    font-size: 18px;\n    font-family: 'Manrope', sans-serif;;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: calc(20/18);\n    border-radius: 14px;\n    background-color: #F7F7FB;\n    color: var(--black-color);\n    border: none;\n\n    /* &::placeholder { */\n        /* padding: 14px 18px; */\n        /* color: var(--black-color); */\n        /* font-family: 'Manrope', sans-serif;;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: calc(20/18); */\n\n    /* };  */\n    /* &:focus-visible{\n        border-color: transparent;\n    } */\n    \n\n`;\n\nexport const GroupInput = styled.div`\n    display: flex;\n    /* width: 320px; */\n`;\n\nexport const TextLabel = styled.label`\n    font-size: 14px;\n    color: #8A8A89;\n    font-weight: 500;\n    margin-bottom: 8px;\n`;\n\nexport const FilterInputLeft = styled.input`\n    box-sizing: border-box;\n    height: 48px;\n    width: 160px;\n    padding: 14px 18px;\n    font-size: 18px;\n    font-family: 'Manrope', sans-serif;;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: calc(20/18);\n    border-top-left-radius: 14px;\n    border-bottom-left-radius: 14px;\n    background-color: #F7F7FB;\n    color: var(--black-color);\n    /* border: none; */\n    border-right-color: var(--grey-color);\n    border-top-color: transparent;\n    border-bottom-color: transparent;\n    border-left-color: transparent;\n    `;\n\n    export const FilterInputRight = styled.input`\n    box-sizing: border-box;\n    height: 48px;\n    width: 160px;\n    padding: 14px 18px;\n    font-size: 18px;\n    font-family: 'Manrope', sans-serif;;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: calc(20/18);\n    border-top-right-radius: 14px;\n    border-bottom-right-radius: 14px;\n    background-color: #F7F7FB;\n    color: var(--black-color);\n    /* border: none; */\n    border: none;\n    /* border-top-color: transparent;\n    border-bottom-color: transparent;\n    border-right-color: transparent; */\n    `;","\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { updateFilters } from 'redux/adverts/advertsSlice';\nimport makes from './makes.json';\nimport {\n    Container, SearchForm, Btn, FilterInput, FormElement, GroupInput, TextLabel,\nFilterInputLeft, FilterInputRight} from \"./AdvertsSearch.styled\";\n\nexport default function AdvertsSearch() {\n \n    const dispatch = useDispatch();\n\n    let prices = [];\n     for (let i = 30; i <= 250; i+=10) {\n         prices.push(i);\n                        \n    };\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        const inputs = e.target.elements;\n        // const filters = [...e.target.elements].map(element => ({ [element.name]: element.value }));\n        const values = {\n            make: inputs.make.value,\n            price: inputs.price.value,  \n            mileageFrom: inputs.mileageFrom.value,\n            mileageTo: inputs.mileageTo.value,\n        }\n        // console.log(\"make\", e.target.elements.make.value);\n        dispatch(updateFilters(values));\n    };\n\n    return (\n        <Container>\n            <SearchForm onSubmit={handleSubmit}>\n                <FormElement>\n                <TextLabel htmlFor=\"make\">Car brand</TextLabel>\n                <FilterInput list=\"car-makes\" id=\"brand\" name=\"make\" autoComplete=\"off\" placeholder=\"Enter the text\"/>\n                <datalist id=\"car-makes\">\n                    {makes.map(make => (<option key={nanoid()}\n                        value={make}></option>\n                    ))}    \n                </datalist>\n                </FormElement>\n                \n                <FormElement>\n                <TextLabel htmlFor=\"price\">Price/ 1 hour </TextLabel>\n                <FilterInput list=\"car-prices\" id=\"price\" name=\"price\" autoComplete=\"off\" placeholder=\"To $\"/>\n                <datalist id=\"car-prices\">\n                    {prices.map(price => (<option key={nanoid()}\n                        value={price}></option>))}\n                    {/* <option value=\"30\"></option>\n                    <option value=\"40\"></option>\n                    <option value=\"50\"></option> */}\n                </datalist>\n                </FormElement>\n                  \n                <FormElement>\n                    <TextLabel htmlFor=\"mileageFrom\">Ð¡ar mileage / km</TextLabel>\n                <GroupInput>         \n                <FilterInputLeft type='number' id=\"mileageFrom\" name=\"mileageFrom\" autoComplete=\"off\" placeholder=\"From\" />\n                <FilterInputRight type='number' id=\"mileageTo\" name=\"mileageTo\" autoComplete=\"off\" placeholder=\"To\"/>\n                </GroupInput>\n                </FormElement>               \n                \n               <Btn type=\"submit\">\n                    Search\n                </Btn>\n            </SearchForm>\n        </Container>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    width: 1184px;\n    margin-left: auto;\n    margin-right:auto;\n\n`;\n\nexport const Btn = styled.button`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-top: 50px;\n    margin-bottom: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: \"Manrope\";\n    font-size: 16px;\n    font-weight: 500;\n    color: var(--blue-color);\n    line-height: calc(24/16);\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: none;\n    background-color: transparent;\n\n    &:hover, :focus {\n        color:  var(--dark-blue-color);\n    }\n`;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorTotal, selectorCurrentAdverts, selectorFilters, selectorAdverts } from \"redux/adverts/selectors\";\nimport { getAdverts, getAdvertsByPage } from \"redux/adverts/operations\";\nimport { useDispatch } from \"react-redux\"; \nimport AdvertsList from \"components/AdvertsList\";\nimport AdvertsSearch from \"components/AdvertsSearch\";\nimport { Container, Btn } from \"./CatalogPage.styled\";\n\nexport default function CatalogPage() {\n    const [page, setPage] = useState(2);\n    const total = useSelector(selectorTotal);\n    const currentAdvertsCount = useSelector(selectorCurrentAdverts).length;\n    const showLoadMore = total > currentAdvertsCount;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAdverts());\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const handleClick = () => {\n        setPage(page => page + 1);\n        dispatch(getAdvertsByPage({page}))\n    };\n\n    const currentAdverts = useSelector(selectorCurrentAdverts);\n\n    const advertsAll = useSelector(selectorAdverts);\n    const filters = useSelector(selectorFilters);\n    const useFilters = filters.make !== \"\" || filters.price !== \"\" || filters.mileageFrom !== \"\" || filters.mileageTo !== \"\";\n    // console.log('filters.make !== \"\"', filters.make !== \"\");\n    // console.log('filters.price !== 0', filters.price !== 0);\n     console.log(\"useFilters\", useFilters);\n    let filteredAdverts = [];\n    if (useFilters) {\n        filteredAdverts = advertsAll.filter(advert => {\n        const price = Number(advert.rentalPrice.replace(\"$\", ''));\n        // console.log(\"price\", Number(advert.rentalPrice.replace(\"$\", '')));\n\n        return (\n            (filters.make === advert.make || filters.make === \"\")\n            &&\n             (price <= filters.price || filters.price === \"\")\n             && ((filters.mileageFrom <= advert.mileage || filters.mileageFrom === \"\")                \n             && (advert.mileage <= filters.mileageTo || filters.mileageFrom === \"\"))\n        )\n    });\n\n     console.log(\"filtredAdverts\", filteredAdverts);          \n    }\n    \n\n    const actualAdverts = filteredAdverts.length ? filteredAdverts : currentAdverts;\n    // console.log(\"actualAdverts\", actualAdverts);\n\n    return (\n        <Container>\n            <AdvertsSearch />\n            <AdvertsList adverts={actualAdverts}/>\n            {showLoadMore & !filteredAdverts.length ? (<Btn type=\"button\" onClick={handleClick}>\n                Load more\n            </Btn>) :\n            (<p></p>)}\n            \n        </Container>\n    )\n}"],"names":["List","styled","AdvertsList","adverts","favoritesId","useSelector","selectorFavoriteAdverts","map","advert","id","AdvertListItem","isFavorite","includes","Container","Btn","SearchForm","FormElement","FilterInput","GroupInput","TextLabel","FilterInputLeft","FilterInputRight","AdvertsSearch","dispatch","useDispatch","prices","i","push","onSubmit","e","preventDefault","inputs","target","elements","values","make","value","price","mileageFrom","mileageTo","updateFilters","htmlFor","list","name","autoComplete","placeholder","makes","nanoid","type","CatalogPage","useState","page","setPage","showLoadMore","selectorTotal","selectorCurrentAdverts","length","useEffect","getAdverts","currentAdverts","advertsAll","selectorAdverts","filters","selectorFilters","useFilters","console","log","filteredAdverts","filter","Number","rentalPrice","replace","mileage","actualAdverts","onClick","getAdvertsByPage"],"sourceRoot":""}