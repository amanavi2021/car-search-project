{"version":3,"file":"static/js/304.b0407495.chunk.js","mappings":"wQAOe,SAASA,IAEtB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAGtBC,GADkBF,EAAAA,EAAAA,IAAYG,EAAAA,IACAC,KAAI,SAAAC,GAAM,OAAIA,EAAOC,EAAX,IAE9C,OACE,SAAC,IAAD,UACGP,EAAQK,KAAI,SAAAC,GAAM,OACjB,SAACE,EAAA,EAAD,CAEEF,OAAQA,EACRG,WAAYN,EAAYO,SAASJ,EAAOC,KAFnCD,EAAOC,GAFG,KASxB,C,6BCvBYI,EAAYC,EAAAA,EAAAA,IAAH,oG,uPCIP,SAASC,IAEpB,OACI,SAACF,EAAD,WACI,6BACI,kBAAOG,QAAQ,QAAf,wBACA,kBAAOC,KAAK,aAAaR,GAAG,QAAQS,KAAK,QAAQC,aAAa,MAAMC,YAAY,oBAChF,qBAAUX,GAAG,aAAb,SACKY,EAAAA,KAAW,SAAAC,GAAK,OAAK,mBAClBC,MAAOD,IADwBE,EAAAA,EAAAA,MAAlB,OAKrB,kBAAOR,QAAQ,QAAf,6BACA,kBAAOC,KAAK,aAAaR,GAAG,QAAQS,KAAK,QAAQC,aAAa,MAAMC,YAAY,UAChF,sBAAUX,GAAG,aAAb,WACI,mBAAQc,MAAM,QACd,mBAAQA,MAAM,QACd,mBAAQA,MAAM,WAElB,kBAAOP,QAAQ,gBAAf,oCACA,kBAAOS,KAAK,SAAShB,GAAG,gBAAgBS,KAAK,gBAAgBC,aAAa,MAAMC,YAAY,UAC5F,kBAAOK,KAAK,SAAShB,GAAG,cAAcS,KAAK,cAAcC,aAAa,MAAMC,YAAY,QACxF,mBAAQK,KAAK,SAAb,wBAMf,CCjCM,IAAMZ,EAAYC,EAAAA,EAAAA,IAAH,8FAOTY,EAAMZ,EAAAA,EAAAA,OAAH,uiBCCD,SAASa,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAQ5B,EAAAA,EAAAA,IAAY6B,EAAAA,IACpBC,GAAsB9B,EAAAA,EAAAA,IAAYC,EAAAA,IAAwB8B,OAC1DC,EAAeJ,EAAQE,EAC7BG,QAAQC,IAAI,QAASN,GACrBK,QAAQC,IAAI,QAASJ,GACrBG,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,KACZ,GAAE,IAOH,OACI,UAAC,EAAD,YACI,SAAC1B,EAAD,KACA,SAACd,EAAD,IACCkC,IAAgB,SAACT,EAAD,CAAKD,KAAK,SAASiB,QATxB,WAChBZ,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,IACZS,GAASK,EAAAA,EAAAA,GAAiB,CAACd,KAAAA,IAC9B,EAMwB,yBAM5B,C","sources":["components/AdvertsList/AdvertsList.jsx","components/AdvertsSearch/AdvertsSearch.styled.jsx","components/AdvertsSearch/AdvertsSearch.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\n// import { selectorAdverts, selectorCurrentAdverts } from 'redux/adverts/selectors';\nimport {  selectorCurrentAdverts, selectorFavoriteAdverts } from 'redux/adverts/selectors';\n\nimport AdvertListItem from 'components/AdvertListItem';\nimport { List } from './AdvertList.styled';\n\nexport default function AdvertsList() {\n\n  const adverts = useSelector(selectorCurrentAdverts);\n\n  const favoriteAdverts = useSelector(selectorFavoriteAdverts);\n  const favoritesId = favoriteAdverts.map(advert => advert.id);\n  \n  return (\n    <List>\n      {adverts.map(advert => (\n        <AdvertListItem\n          key={advert.id}\n          advert={advert}\n          isFavorite={favoritesId.includes(advert.id)}\n        />\n      ))}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    margin-left: auto;\n    margin-right:auto;\n    margin-bottom: 50px;\n\n`;","\nimport { Container } from \"./AdvertsSearch.styled\";\nimport brands from './makes.json';\nimport { nanoid } from \"nanoid\";\n\n\nexport default function AdvertsSearch() {\n    \n    return (\n        <Container>\n            <form>\n                <label htmlFor=\"brand\">Car brand</label>\n                <input list=\"car-brands\" id=\"brand\" name=\"brand\" autoComplete=\"off\" placeholder=\"Enter the text\"/>\n                <datalist id=\"car-brands\">\n                    {brands.map(brand => (<option key={nanoid()}\n                        value={brand}></option>\n                    ))}    \n                </datalist>\n\n                <label htmlFor=\"price\">Price/ 1 hour </label>\n                <input list=\"car-prices\" id=\"price\" name=\"price\" autoComplete=\"off\" placeholder=\"To $\"/>\n                <datalist id=\"car-prices\">\n                    <option value=\"30\"></option>\n                    <option value=\"40\"></option>\n                    <option value=\"50\"></option>\n                </datalist>\n                <label htmlFor=\"milleage-from\">Ð¡ar mileage / km</label>\n                <input type='number' id=\"milleage-from\" name=\"milleage-from\" autoComplete=\"off\" placeholder=\"From\"/>\n                <input type='number' id=\"milleage-to\" name=\"milleage-to\" autoComplete=\"off\" placeholder=\"To\"/>\n                <button type=\"submit\">\n                    Search\n                </button>\n            </form>\n        </Container>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    width: 1184px;\n    margin-left: auto;\n    margin-right:auto;\n\n`;\n\nexport const Btn = styled.button`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-top: 100px;\n    margin-bottom: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: \"Manrope\";\n    font-size: 16px;\n    font-weight: 500;\n    color: var(--blue-color);\n    line-height: calc(24/16);\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: none;\n    background-color: transparent;\n\n    &:hover, :focus {\n        color:  var(--dark-blue-color);\n    }\n\n\n`;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorTotal, selectorCurrentAdverts } from \"redux/adverts/selectors\";\nimport { getAdverts, getAdvertsByPage } from \"redux/adverts/operations\";\nimport { useDispatch } from \"react-redux\"; \nimport AdvertsList from \"components/AdvertsList\";\nimport AdvertsSearch from \"components/AdvertsSearch\";\nimport { Container, Btn } from \"./CatalogPage.styled\";\n\nexport default function CatalogPage() {\n    const [page, setPage] = useState(2);\n    const total = useSelector(selectorTotal);\n    const currentAdvertsCount = useSelector(selectorCurrentAdverts).length;\n    const showLoadMore = total > currentAdvertsCount;\n    console.log(\"total\", total);\n    console.log(\"count\", currentAdvertsCount);\n    console.log(showLoadMore);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAdverts());\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const handleClick = () => {\n        setPage(page => page + 1);\n        dispatch(getAdvertsByPage({page}))\n    };\n\n    return (\n        <Container>\n            <AdvertsSearch />\n            <AdvertsList />\n            {showLoadMore && <Btn type=\"button\" onClick={handleClick}>\n                Load more\n            </Btn>}\n            \n        </Container>\n    )\n}"],"names":["AdvertsList","adverts","useSelector","selectorCurrentAdverts","favoritesId","selectorFavoriteAdverts","map","advert","id","AdvertListItem","isFavorite","includes","Container","styled","AdvertsSearch","htmlFor","list","name","autoComplete","placeholder","brands","brand","value","nanoid","type","Btn","CatalogPage","useState","page","setPage","total","selectorTotal","currentAdvertsCount","length","showLoadMore","console","log","dispatch","useDispatch","useEffect","getAdverts","onClick","getAdvertsByPage"],"sourceRoot":""}