{"version":3,"file":"static/js/814.6600b2e1.chunk.js","mappings":"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","sources":["components/AdvertsList/AdvertList.styled.jsx","components/AdvertsList/AdvertsList.jsx","components/AdvertsSearch/AdvertsSearch.styled.jsx","components/AdvertsSearch/AdvertsSearch.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    display: grid;\n    grid-template-columns: none;\n    grid-template-columns: repeat(auto-fill, minmax(280px,1fr));\n    grid-row-gap: 50px;\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 0;\n`;","import { useSelector } from 'react-redux';\n// import { selectorAdverts, selectorCurrentAdverts } from 'redux/adverts/selectors';\nimport { selectorFavoriteAdverts } from 'redux/adverts/selectors';\n\nimport AdvertListItem from 'components/AdvertListItem';\nimport { List } from './AdvertList.styled';\n\nexport default function AdvertsList({adverts}) {\n\n  // const adverts = useSelector(selectorCurrentAdverts);\n\n  const favoriteAdverts = useSelector(selectorFavoriteAdverts);\n  const favoritesId = favoriteAdverts.map(advert => advert.id);\n  \n  return (\n    <List>\n      {adverts.map(advert => (\n        <AdvertListItem\n          key={advert.id}\n          advert={advert}\n          isFavorite={favoritesId.includes(advert.id)}\n        />\n      ))}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    margin-left: auto;\n    margin-right:auto;\n    margin-bottom: 50px;\n\n`;","\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { updateFilters } from 'redux/adverts/advertsSlice';\nimport makes from './makes.json';\nimport { Container } from \"./AdvertsSearch.styled\";\n\nexport default function AdvertsSearch() {\n \n    const dispatch = useDispatch();\n\n    let prices = [];\n     for (let i = 30; i <= 250; i+=10) {\n         prices.push(i);\n                        \n    };\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        const inputs = e.target.elements;\n        // const filters = [...e.target.elements].map(element => ({ [element.name]: element.value }));\n        const values = {\n            make: inputs.make.value,\n            price: inputs.price.value,  \n            mileageFrom: inputs.mileageFrom.value,\n            mileageTo: inputs.mileageTo.value,\n        }\n        // console.log(\"make\", e.target.elements.make.value);\n        dispatch(updateFilters(values));\n    };\n\n  \n   \n\n\n    return (\n        <Container>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"make\">Car brand</label>\n                <input list=\"car-makes\" id=\"brand\" name=\"make\" autoComplete=\"off\" placeholder=\"Enter the text\"/>\n                <datalist id=\"car-makes\">\n                    {makes.map(make => (<option key={nanoid()}\n                        value={make}></option>\n                    ))}    \n                </datalist>\n\n                <label htmlFor=\"price\">Price/ 1 hour </label>\n                <input list=\"car-prices\" id=\"price\" name=\"price\" autoComplete=\"off\" placeholder=\"To $\"/>\n                <datalist id=\"car-prices\">\n                    {prices.map(price => (<option key={nanoid()}\n                        value={price}></option>))}\n                    {/* <option value=\"30\"></option>\n                    <option value=\"40\"></option>\n                    <option value=\"50\"></option> */}\n                </datalist>\n                <label htmlFor=\"mileageFrom\">Ð¡ar mileage / km</label>\n                <input type='number' id=\"mileageFrom\" name=\"mileageFrom\" autoComplete=\"off\" placeholder=\"From\"/>\n                <input type='number' id=\"mileageTo\" name=\"mileageTo\" autoComplete=\"off\" placeholder=\"To\"/>\n                <button type=\"submit\">\n                    Search\n                </button>\n            </form>\n        </Container>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n    width: 1184px;\n    margin-left: auto;\n    margin-right:auto;\n\n`;\n\nexport const Btn = styled.button`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-top: 100px;\n    margin-bottom: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: \"Manrope\";\n    font-size: 16px;\n    font-weight: 500;\n    color: var(--blue-color);\n    line-height: calc(24/16);\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: none;\n    background-color: transparent;\n\n    &:hover, :focus {\n        color:  var(--dark-blue-color);\n    }\n\n\n`;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectorTotal, selectorCurrentAdverts, selectorFilters, selectorAdverts } from \"redux/adverts/selectors\";\nimport { getAdverts, getAdvertsByPage } from \"redux/adverts/operations\";\nimport { useDispatch } from \"react-redux\"; \nimport AdvertsList from \"components/AdvertsList\";\nimport AdvertsSearch from \"components/AdvertsSearch\";\nimport { Container, Btn } from \"./CatalogPage.styled\";\n\nexport default function CatalogPage() {\n    const [page, setPage] = useState(2);\n    const total = useSelector(selectorTotal);\n    const currentAdvertsCount = useSelector(selectorCurrentAdverts).length;\n    const showLoadMore = total > currentAdvertsCount;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAdverts());\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const handleClick = () => {\n        setPage(page => page + 1);\n        dispatch(getAdvertsByPage({page}))\n    };\n\n    const currentAdverts = useSelector(selectorCurrentAdverts);\n\n    const advertsAll = useSelector(selectorAdverts);\n    const filters = useSelector(selectorFilters);\n    const useFilters = filters.make !== \"\" & filters.price !== 0 & filters.mileageFrom !== 0 & filters.mileageTo !== 0;\n    console.log(\"useFilters\", useFilters);\n    let filteredAdverts = [];\n    if (useFilters) {\n        filteredAdverts = advertsAll.filter(advert => {\n        const price = Number(advert.rentalPrice.replace(\"$\", ''));\n        // console.log(\"price\", Number(advert.rentalPrice.replace(\"$\", '')));\n\n        return (\n            (filters.make === advert.make || filters.make === \"\")\n             &&\n             (price >= filters.price || filters.price === 0)\n            // && (filters.mileageFrom <= advert.mileage && advert.mileage <= filters.mileageTo)\n        )\n    });\n\n    console.log(\"filtredAdverts\", filteredAdverts); \n\n         \n     }\n    \n\n    const actualAdverts = filteredAdverts.length ? filteredAdverts : currentAdverts;\n    console.log(\"actualAdverts\", actualAdverts);\n\n    return (\n        <Container>\n            <AdvertsSearch />\n            <AdvertsList adverts={actualAdverts}/>\n            {showLoadMore && !filteredAdverts.length && <Btn type=\"button\" onClick={handleClick}>\n                Load more\n            </Btn>}\n            \n        </Container>\n    )\n}"],"names":["List","styled","AdvertsList","adverts","favoritesId","useSelector","selectorFavoriteAdverts","map","advert","id","AdvertListItem","isFavorite","includes","Container","AdvertsSearch","dispatch","useDispatch","prices","i","push","onSubmit","e","preventDefault","inputs","target","elements","values","make","value","price","mileageFrom","mileageTo","updateFilters","htmlFor","list","name","autoComplete","placeholder","makes","nanoid","type","Btn","CatalogPage","useState","page","setPage","showLoadMore","selectorTotal","selectorCurrentAdverts","length","useEffect","getAdverts","currentAdverts","advertsAll","selectorAdverts","filters","selectorFilters","useFilters","console","log","filteredAdverts","filter","Number","rentalPrice","replace","actualAdverts","onClick","getAdvertsByPage"],"sourceRoot":""}